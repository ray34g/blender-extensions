name: Build and Deploy Blender Extensions

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: blender-extensions-arc-runner-set
    container:
      image: core.harbor.ray34g.com/library/blender:4.2.10
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Init and update submodules (pull latest from remote)
        run: |
          git config --global --add safe.directory "${GITHUB_WORKSPACE}"
          git submodule init
          git submodule update --remote --recursive

      - name: Prepare directories
        run: mkdir -p public build_temp

      - name: Build each extension with Blender CLI
        run: |
          for dir in extensions/*; do
            if [ -d "$dir" ]; then
              blender --background --command extension build \
                --source-dir "$dir" \
                --output-dir ./build_temp
            fi
          done

      - name: Organize built artifacts by ID and Version
        run: |
          mkdir -p public/extensions
          for zip in build_temp/*.zip; do
            filename=$(basename "$zip")
            name_version="${filename%.zip}"  # Remove Extension
            id=$(echo "$name_version" | sed 's/-[0-9]\+\.[0-9]\+\.[0-9]\+$//')
            version=$(echo "$name_version" | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
      
            mkdir -p "public/extensions/$id/$version"
            mkdir -p "public/extensions/$id/latest"
      
            # zip配置
            cp "$zip" "public/extensions/$id/$version/${id}-${version}.zip"
            cp "$zip" "public/extensions/$id/latest/${id}-latest.zip"
      
            # 署名ファイル
            sha256sum "public/extensions/$id/$version/${id}-${version}.zip" | awk '{print $1}' > "public/extensions/$id/$version/${id}-${version}.zip.sig"
            sha256sum "public/extensions/$id/latest/${id}-latest.zip" | awk '{print $1}' > "public/extensions/$id/latest/${id}-latest.zip.sig"
          done

      - name: Generate index.json & index.html
        run: |
          blender --background \
                  --command extension server-generate \
                  --repo-dir ./public/extensions \
                  --html
              
      - name: Generate CNAME file
        run: echo "blender.ray34g.com" > public/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4