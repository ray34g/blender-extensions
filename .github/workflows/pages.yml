name: Build and Deploy Blender Extensions (organized by ID/version)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Init and update submodules (pull latest from remote)
        run: |
          git submodule init
          git submodule update --remote --recursive

      - name: Set up Blender Portable (Linux版 4.4RC)
        run: |
          mkdir blender
          curl -L https://mirror.freedif.org/blender/release/Blender4.4/blender-4.4.1-linux-x64.tar.xz | tar xJ -C blender --strip-components=1

      - name: Create public directory
        run: mkdir public

      - name: Build each extension with Blender (extension build)
        run: |
          mkdir -p build_temp
          for dir in extensions/*; do
            if [ -d "$dir" ]; then
              ./blender/blender --background --command extension build --source-dir "$dir" --output-dir ./build_temp
            fi
          done

      - name: Organize built artifacts by ID and Version
        run: |
          mkdir -p public/extensions
          for zip in build_temp/*.zip; do
            filename=$(basename "$zip")
            name_version="${filename%.zip}"  # 拡張子除去
            id=$(echo "$name_version" | sed 's/-[0-9]\+\.[0-9]\+\.[0-9]\+$//')
            version=$(echo "$name_version" | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
      
            mkdir -p "public/extensions/$id/$version"
            mkdir -p "public/extensions/$id/latest"
      
            # zip配置
            cp "$zip" "public/extensions/$id/$version/${id}-${version}.zip"
            cp "$zip" "public/extensions/$id/latest/${id}-latest.zip"
      
            # 署名ファイル
            sha256sum "public/extensions/$id/$version/${id}-${version}.zip" | awk '{print $1}' > "public/extensions/$id/$version/${id}-${version}.zip.sig"
            sha256sum "public/extensions/$id/latest/${id}-latest.zip" | awk '{print $1}' > "public/extensions/$id/latest/${id}-latest.zip.sig"
          done

      - name: Generate index.html
        run: |
          echo '<html><body><h1>Blender Extensions Repository</h1><ul>' > public/index.html
          for ext in public/extensions/*; do
            if [ -d "$ext" ]; then
              extname=$(basename "$ext")
              echo "<li><a href=\"./extensions/$extname/latest/\">$extname (latest)</a></li>" >> public/index.html
            fi
          done
          echo '</ul></body></html>' >> public/index.html

      - name: Generate CNAME file
        run: echo "blender.ray34g.com" > public/CNAME

      - name: Deploy public directory to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
